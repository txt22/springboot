<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example</groupId>
	<artifactId>demo1</artifactId>
	<version>1.1.2</version>
	<packaging>jar</packaging>
	<name>demo1</name>
	<description>Spring Boot with Druid support,help you simplify Druid config in Spring Boot.</description>
	<!--<url>https://github.com/alibaba/druid</url>-->

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<druid.version>1.1.2</druid.version>
		<spring-boot.version>1.5.3.RELEASE</spring-boot.version>
	</properties>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.3.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>
		<!--
          devtools可以实现页面热部署（即页面修改后会立即生效，这个可以直接在application.properties文件中配置spring.thymeleaf.cache=false来实现），
          实现类文件热部署（类文件修改后不会立即生效），实现对属性文件的热部署。
          即devtools会监听classpath下的文件变动，并且会立即重启应用（发生在保存时机），注意：因为其采用的虚拟机机制，该项重启是很快的
        -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- mybatis -->
		<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>1.1.1</version>
		</dependency>
		<!-- mybatis 分页插件 -->
		<dependency>
			<groupId>com.github.pagehelper</groupId>
			<artifactId>pagehelper</artifactId>
			<version>4.1.6</version>
		</dependency>
		<!--mysql-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		<!--druid-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.20</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>spring-boot-druid</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<!-- 我习惯将mybatis的配置xml放在java目录下 -->
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*</include>
				</includes>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
</project>


	<!--<developers>-->
		<!--<developer>-->
			<!--<name>李亮</name>-->
			<!--<id>Michael.Lee</id>-->
			<!--<email>bay120@sina.com</email>-->
		<!--</developer>-->
	<!--</developers>-->


	<!--<dependencyManagement>-->
		<!--<dependencies>-->
			<!--<dependency>-->
				<!--&lt;!&ndash; Import dependency management from Spring Boot,not include plugin-->
                    <!--management as the parent import style &ndash;&gt;-->
				<!--<groupId>org.springframework.boot</groupId>-->
				<!--<artifactId>spring-boot-dependencies</artifactId>-->
				<!--<version>${spring-boot.version}</version>-->
				<!--<type>pom</type>-->
				<!--<scope>import</scope>-->
			<!--</dependency>-->
		<!--</dependencies>-->
	<!--</dependencyManagement>-->

	<!--<dependencies>-->
		<!--<dependency>-->
			<!--<groupId>com.alibaba</groupId>-->
			<!--<artifactId>druid</artifactId>-->
			<!--<version>${druid.version}</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-autoconfigure</artifactId>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-configuration-processor</artifactId>-->
			<!--<optional>true</optional>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>javax.servlet</groupId>-->
			<!--<artifactId>javax.servlet-api</artifactId>-->
			<!--<scope>provided</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-web</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-test</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.springframework.boot</groupId>-->
			<!--<artifactId>spring-boot-starter-data-jpa</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>com.h2database</groupId>-->
			<!--<artifactId>h2</artifactId>-->
			<!--<scope>test</scope>-->
		<!--</dependency>-->
	<!--</dependencies>-->

	<!--<scm>-->
		<!--<url>https://wenshao@github.com/alibaba/druid.git</url>-->
		<!--<connection>scm:git:https://wenshao@github.com/alibaba/druid.git</connection>-->
	<!--</scm>-->

	<!--<organization>-->
		<!--<name>Alibaba Group</name>-->
		<!--<url>http://code.alibabatech.com/</url>-->
	<!--</organization>-->

	<!--<licenses>-->
		<!--<license>-->
			<!--<name>Apache 2</name>-->
			<!--<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>-->
			<!--<distribution>repo</distribution>-->
			<!--<comments>A business-friendly OSS license</comments>-->
		<!--</license>-->
	<!--</licenses>-->

	<!--<build>-->
		<!--<plugins>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-compiler-plugin</artifactId>-->
				<!--<version>2.1</version>-->
				<!--<configuration>-->
					<!--<source>1.7</source>-->
					<!--<target>1.7</target>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-surefire-plugin</artifactId>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-source-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>attach-sources</id>-->
						<!--<goals>-->
							<!--<goal>jar</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-javadoc-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>attach-javadoc</id>-->
						<!--<goals>-->
							<!--<goal>jar</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
				<!--<configuration>-->
					<!--<charset>UTF-8</charset>-->
					<!--<encoding>UTF-8</encoding>-->
					<!--<docencoding>UTF-8</docencoding>-->
				<!--</configuration>-->
			<!--</plugin>-->
			<!--<plugin>-->
				<!--<groupId>org.apache.maven.plugins</groupId>-->
				<!--<artifactId>maven-gpg-plugin</artifactId>-->
				<!--<executions>-->
					<!--<execution>-->
						<!--<id>sign-artifacts</id>-->
						<!--<phase>verify</phase>-->
						<!--<goals>-->
							<!--<goal>sign</goal>-->
						<!--</goals>-->
					<!--</execution>-->
				<!--</executions>-->
			<!--</plugin>-->
		<!--</plugins>-->
	<!--</build>-->
	<!--<distributionManagement>-->
		<!--<repository>-->
			<!--<id>releases</id>-->
			<!--<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>-->
		<!--</repository>-->
		<!--<snapshotRepository>-->
			<!--<id>snapshots</id>-->
			<!--<url>https://oss.sonatype.org/content/repositories/snapshots</url>-->
		<!--</snapshotRepository>-->
		<!--<downloadUrl>https://oss.sonatype.org/content/groups/public</downloadUrl>-->
	<!--</distributionManagement>-->

